{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nikola\\\\Desktop\\\\Academind\\\\Academind-React-FullTutorial\\\\23 A (Pretty Deep Dive) Introduction to Next.js\\\\06-MongoDB\\\\pages\\\\[meetUpId]\\\\index.js\";\nimport MeetUpDetail from '../../components/meetups/MeetUpDetail';\nimport { MongoClient } from 'mongodb';\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://nikola:s09spowpqJa4uept@cluster0.xvpz9.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetUpId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetUpId;\n  console.log(meetUpId);\n  const client = await MongoClient.connect('mongodb+srv://nikola:s09spowpqJa4uept@cluster0.xvpz9.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.findOne({\n    _id: meetUpId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image: meetups.image,\n        id: meetUpId,\n        title: 'First Meetup',\n        address: 'Some Street 5, Some City',\n        description: 'This is a first meetup'\n      }\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/Nikola/Desktop/Academind/Academind-React-FullTutorial/23 A (Pretty Deep Dive) Introduction to Next.js/06-MongoDB/pages/[meetUpId]/index.js"],"names":["MeetUpDetail","MongoClient","MeetUpDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetUpId","toString","getStaticProps","context","console","log","findOne","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAChC,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACpB,8GADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADuB,KAAb,CAAZ;AAFD,GAAP;AAMA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACpB,8GADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACkB,OAAlB,CAA0B;AAAEd,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAAtB;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNhB,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAEU,OAAO,CAACV,KADJ;AAGX2B,QAAAA,EAAE,EAAEP,QAHO;AAIXnB,QAAAA,KAAK,EAAE,cAJI;AAKXC,QAAAA,OAAO,EAAE,0BALE;AAMXC,QAAAA,WAAW,EAAE;AANF;AADN;AADD,GAAP;AAYA;AAED,eAAeN,aAAf","sourcesContent":["import MeetUpDetail from '../../components/meetups/MeetUpDetail';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst MeetUpDetails = (props) => {\r\n\treturn (\r\n\t\t<MeetUpDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://nikola:s09spowpqJa4uept@cluster0.xvpz9.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: { meetUpId: meetup._id.toString() },\r\n\t\t})),\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\tconst meetUpId = context.params.meetUpId;\r\n\tconsole.log(meetUpId);\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://nikola:s09spowpqJa4uept@cluster0.xvpz9.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\tconst meetups = await meetupsCollection.findOne({ _id: meetUpId });\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\timage: meetups.image,\r\n\r\n\t\t\t\tid: meetUpId,\r\n\t\t\t\ttitle: 'First Meetup',\r\n\t\t\t\taddress: 'Some Street 5, Some City',\r\n\t\t\t\tdescription: 'This is a first meetup',\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}